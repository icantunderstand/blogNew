function debounce(fn, delay, { immediate = false, maxWait = 0 } = {}) {

    let timer = null
    let burstStart = 0
    let lastThis = null
    let lastArgs = null

    return function debounced(...agrs) {
        const now = +new Date()
        lastThis = this
        lastArgs = args
        if(burstStart === 0) {
            burstStart = now
        }
        if(maxWait && now - burstStart > maxWait) {
            burstStart = 0
            clearTimeout(timer)
            timer = null
            return fn.apply(lastThis, lastArgs)
        }

        const shouldExecuteNow = immediate && timer === null

        clearTimeout(timer)
        timer = setTimeout(() => {
             burstStart = 0
      timer = null
      fn.apply(lastThis, lastArgs)
        }, delay)
    }
}