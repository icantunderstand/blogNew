3:I[9275,[],""]
5:I[1343,[],""]
6:I[8700,["231","static/chunks/231-077d91b8a998ef49.js","379","static/chunks/379-a0c71ab1e96d0e92.js","185","static/chunks/app/layout-003842c0299acfac.js"],"ThemeProviders"]
7:I[4080,["231","static/chunks/231-077d91b8a998ef49.js","379","static/chunks/379-a0c71ab1e96d0e92.js","185","static/chunks/app/layout-003842c0299acfac.js"],""]
8:I[9032,["231","static/chunks/231-077d91b8a998ef49.js","379","static/chunks/379-a0c71ab1e96d0e92.js","185","static/chunks/app/layout-003842c0299acfac.js"],"KBarSearchProvider"]
9:I[231,["231","static/chunks/231-077d91b8a998ef49.js","173","static/chunks/173-38a51eddae47d5ab.js","11","static/chunks/11-99baa04f2a4a76a1.js","797","static/chunks/app/blog/%5B...slug%5D/page-48f3c518302c5cd2.js"],""]
a:I[509,["231","static/chunks/231-077d91b8a998ef49.js","379","static/chunks/379-a0c71ab1e96d0e92.js","185","static/chunks/app/layout-003842c0299acfac.js"],"KBarButton"]
b:I[1398,["231","static/chunks/231-077d91b8a998ef49.js","379","static/chunks/379-a0c71ab1e96d0e92.js","185","static/chunks/app/layout-003842c0299acfac.js"],"default"]
c:I[8976,["231","static/chunks/231-077d91b8a998ef49.js","379","static/chunks/379-a0c71ab1e96d0e92.js","185","static/chunks/app/layout-003842c0299acfac.js"],"default"]
4:["slug","node/nodeMemory","c"]
0:["Y5CuRtWw-6yggfPFhNcyc",[[["",{"children":["blog",{"children":[["slug","node/nodeMemory","c"],{"children":["__PAGE__?{\"slug\":[\"node\",\"nodeMemory\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","node/nodeMemory","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/blogNew/_next/static/css/439abcb0b4f1552b.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en-us","className":"__variable_68d7fb scroll-smooth","suppressHydrationWarning":true,"children":[["$","link",null,{"rel":"apple-touch-icon","sizes":"76x76","href":"/static/favicons/apple-touch-icon.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/static/favicons/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/static/favicons/favicon-16x16.png"}],["$","link",null,{"rel":"manifest","href":"/static/favicons/site.webmanifest"}],["$","link",null,{"rel":"mask-icon","href":"/static/favicons/safari-pinned-tab.svg","color":"#5bbad5"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: light)","content":"#fff"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: dark)","content":"#000"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}],["$","body",null,{"className":"bg-white pl-[calc(100vw-100%)] text-black antialiased dark:bg-gray-950 dark:text-white","children":["$","$L6",null,{"children":[["$undefined","$undefined","$undefined",["$","$L7",null,{"async":true,"defer":true,"data-website-id":"$undefined","src":"https://analytics.umami.is/script.js"}],"$undefined","$undefined"],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":["$","div",null,{"className":"flex h-screen flex-col justify-between font-sans","children":[["$","$L8",null,{"kbarConfig":{"searchDocumentsPath":"search.json"},"children":[["$","header",null,{"className":"flex items-center justify-between py-10","children":[["$","div",null,{"children":["$","$L9",null,{"href":"/","aria-label":"noodles的笔记本","children":["$","div",null,{"className":"flex items-center justify-between","children":[["$","div",null,{"className":"mr-3","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","xmlnsXlink":"http://www.w3.org/1999/xlink","width":53.87,"height":43.61,"viewBox":"344.564 330.278 111.737 91.218","children":[["$","defs",null,{"children":[["$","linearGradient",null,{"id":"logo_svg__b","x1":420.97,"x2":420.97,"y1":331.28,"y2":418.5,"gradientUnits":"userSpaceOnUse","children":[["$","stop",null,{"offset":"0%","style":{"stopColor":"#06b6d4","stopOpacity":1}}],["$","stop",null,{"offset":"100%","style":{"stopColor":"#67e8f9","stopOpacity":1}}]]}],["$","linearGradient",null,{"id":"logo_svg__d","x1":377.89,"x2":377.89,"y1":331.28,"y2":418.5,"gradientUnits":"userSpaceOnUse","children":[["$","stop",null,{"offset":"0%","style":{"stopColor":"#06b6d4","stopOpacity":1}}],["$","stop",null,{"offset":"100%","style":{"stopColor":"#67e8f9","stopOpacity":1}}]]}],["$","path",null,{"id":"logo_svg__a","d":"M453.3 331.28v28.57l-64.66 58.65v-30.08z"}],["$","path",null,{"id":"logo_svg__c","d":"M410.23 331.28v28.57l-64.67 58.65v-30.08z"}]]}],["$","use",null,{"xlinkHref":"#logo_svg__a","fill":"url(#logo_svg__b)"}],["$","use",null,{"xlinkHref":"#logo_svg__c","fill":"url(#logo_svg__d)"}]]}]}],["$","div",null,{"className":"hidden h-6 text-2xl font-semibold sm:block","children":"noodles的笔记本"}]]}]}]}],["$","div",null,{"className":"flex items-center space-x-4 leading-5 sm:space-x-6","children":[[["$","$L9",null,{"href":"/blog","className":"hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"博客列表"}],["$","$L9",null,{"href":"/tags","className":"hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"标签"}],["$","$L9",null,{"href":"/projects","className":"hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"项目"}],["$","$L9",null,{"href":"/about","className":"hidden font-medium text-gray-900 dark:text-gray-100 sm:block","children":"了解"}]],["$","$La",null,{"aria-label":"Search","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","strokeWidth":1.5,"stroke":"currentColor","className":"h-6 w-6 text-gray-900 dark:text-gray-100","children":["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","d":"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"}]}]}],["$","$Lb",null,{}],["$","$Lc",null,{}]]}]]}],["$","main",null,{"className":"mb-auto","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex flex-col items-start justify-start md:mt-24 md:flex-row md:items-center md:justify-center md:space-x-6","children":[["$","div",null,{"className":"space-x-2 pb-8 pt-6 md:space-y-5","children":["$","h1",null,{"className":"text-6xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 md:border-r-2 md:px-6 md:text-8xl md:leading-14","children":"404"}]}],["$","div",null,{"className":"max-w-md","children":[["$","p",null,{"className":"mb-4 text-xl font-bold leading-normal md:text-2xl","children":"Sorry we couldn't find this page."}],["$","p",null,{"className":"mb-8","children":"But dont worry, you can find plenty of other things on our homepage."}],["$","$L9",null,{"href":"/","className":"focus:shadow-outline-blue inline rounded-lg border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium leading-5 text-white shadow transition-colors duration-150 hover:bg-blue-700 focus:outline-none dark:hover:bg-blue-500","children":"Back to homepage"}]]}]]}],"notFoundStyles":[],"styles":null}]}]]}],["$","footer",null,{"children":["$","div",null,{"className":"mt-16 flex flex-col items-center","children":[["$","div",null,{"className":"mb-3 flex space-x-4","children":[["$","a",null,{"className":"text-sm text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"mailto:icantunderstand@yeah.net","children":[["$","span",null,{"className":"sr-only","children":"mail"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 20 20","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":[["$","title",null,{"children":"Mail"}],["$","path",null,{"d":"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"}],["$","path",null,{"d":"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"}]]}]]}],["$","a",null,{"className":"text-sm text-gray-500 transition hover:text-gray-600","target":"_blank","rel":"noopener noreferrer","href":"https://github.com/icantunderstand","children":[["$","span",null,{"className":"sr-only","children":"github"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 24 24","className":"fill-current text-gray-700 hover:text-primary-500 dark:text-gray-200 dark:hover:text-primary-400 h-6 w-6","children":[["$","title",null,{"children":"Github"}],["$","path",null,{"d":"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"}]]}]]}],null,null,null,null,null,null,null]}],["$","div",null,{"className":"mb-2 flex space-x-2 text-sm text-gray-500 dark:text-gray-400","children":[["$","div",null,{"children":"noodles"}],["$","div",null,{"children":" • "}],["$","div",null,{"children":"© 2025"}],["$","div",null,{"children":" • "}],["$","$L9",null,{"href":"/","children":"noodles的笔记本"}]]}],["$","div",null,{"className":"mb-8 text-sm text-gray-500 dark:text-gray-400","children":["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://github.com/timlrx/tailwind-nextjs-starter-blog","children":"Tailwind Nextjs Theme"}]}]]}]}]]}]}]]}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/blogNew/_next/static/css/9ce902637fde71d3.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/blogNew/_next/static/css/5fd0da1ac056e5ea.css","precedence":"next","crossOrigin":"$undefined"}]],"$Ld"]]]]
e:I[1136,["231","static/chunks/231-077d91b8a998ef49.js","173","static/chunks/173-38a51eddae47d5ab.js","11","static/chunks/11-99baa04f2a4a76a1.js","797","static/chunks/app/blog/%5B...slug%5D/page-48f3c518302c5cd2.js"],"default"]
f:I[8173,["231","static/chunks/231-077d91b8a998ef49.js","173","static/chunks/173-38a51eddae47d5ab.js","11","static/chunks/11-99baa04f2a4a76a1.js","797","static/chunks/app/blog/%5B...slug%5D/page-48f3c518302c5cd2.js"],"Image"]
2:[["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"聊聊Node的内存管理\",\"datePublished\":\"2021-07-01T00:00:00.000Z\",\"dateModified\":\"2021-07-01T00:00:00.000Z\",\"image\":\"\",\"url\":\"https://icantunderstand.github.io/blogNew//blog/node/nodeMemory\",\"author\":[{\"@type\":\"Person\",\"name\":\"noodles\"}]}"}}],["$","$Le",null,{"content":{"title":"聊聊Node的内存管理","date":"2021-07-01T00:00:00.000Z","tags":["Node"],"type":"Blog","readingTime":{"text":"7 min read","minutes":6.15,"time":369000,"words":1230},"slug":"node/nodeMemory","path":"blog/node/nodeMemory","filePath":"blog/node/nodeMemory.mdx","toc":[{"value":"运行时存储","url":"#运行时存储","depth":2},{"value":"堆存储","url":"#堆存储","depth":3},{"value":"栈存储","url":"#栈存储","depth":3},{"value":"内存管理","url":"#内存管理","depth":2},{"value":"V8堆内存结构","url":"#v8堆内存结构","depth":3},{"value":"V8垃圾回收","url":"#v8垃圾回收","depth":3},{"value":"新生区垃圾回收","url":"#新生区垃圾回收","depth":3},{"value":"新生区晋升到老生区","url":"#新生区晋升到老生区","depth":4},{"value":"老生区垃圾回收","url":"#老生区垃圾回收","depth":3},{"value":"参考","url":"#参考-14","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"聊聊Node的内存管理","datePublished":"2021-07-01T00:00:00.000Z","dateModified":"2021-07-01T00:00:00.000Z","image":"","url":"https://icantunderstand.github.io/blogNew//blog/node/nodeMemory","author":[{"@type":"Person","name":"noodles"}]}},"authorDetails":[{"name":"noodles","avatar":"/static/images/avatar.png","occupation":"工程师","company":"时间有限公司","email":"icantunderstand@yeah.net","github":"https://github.com/icantunderstand","type":"Authors","readingTime":{"text":"1 min read","minutes":0.4,"time":24000,"words":80},"slug":"default","path":"authors/default","filePath":"authors/default.mdx","toc":[]}],"next":{"title":"一起学Android-页面数据管理(ViewModel&LiveData)","date":"2021-07-02T00:00:00.000Z","tags":["crossPlatform"],"type":"Blog","readingTime":{"text":"3 min read","minutes":2.46,"time":147600,"words":492},"slug":"crossPlatform/androidViewModel","path":"blog/crossPlatform/androidViewModel","filePath":"blog/crossPlatform/androidViewModel.mdx","toc":[{"value":"ViewModel","url":"#viewmodel","depth":2},{"value":"ViewModel生命周期","url":"#viewmodel生命周期","depth":3},{"value":"LiveData","url":"#livedata","depth":2},{"value":"添加依赖","url":"#添加依赖","depth":3},{"value":"在ViewModel中创建LiveData对象","url":"#在viewmodel中创建livedata对象","depth":3},{"value":"在界面中使用LiveData数据","url":"#在界面中使用livedata数据","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"一起学Android-页面数据管理(ViewModel&LiveData)","datePublished":"2021-07-02T00:00:00.000Z","dateModified":"2021-07-02T00:00:00.000Z","image":"","url":"https://icantunderstand.github.io/blogNew//blog/crossPlatform/androidViewModel"}},"prev":{"title":"一起学Android-数据存储","date":"2021-06-29T00:00:00.000Z","tags":["crossPlatform"],"type":"Blog","readingTime":{"text":"8 min read","minutes":7.07,"time":424200,"words":1414},"slug":"crossPlatform/androidStore","path":"blog/crossPlatform/androidStore","filePath":"blog/crossPlatform/androidStore.mdx","toc":[{"value":"文件存储","url":"#文件存储","depth":2},{"value":"存储文件","url":"#存储文件","depth":3},{"value":"读取文件","url":"#读取文件","depth":3},{"value":"键值存储","url":"#键值存储","depth":2},{"value":"SharedPreferences","url":"#sharedpreferences","depth":3},{"value":"存储键值","url":"#存储键值","depth":4},{"value":"读取键值","url":"#读取键值","depth":4},{"value":"数据库存储","url":"#数据库存储","depth":2},{"value":"定义实体","url":"#定义实体","depth":3},{"value":"定义Dao","url":"#定义dao","depth":3},{"value":"定义数据库文件","url":"#定义数据库文件","depth":3},{"value":"访问数据","url":"#访问数据","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"一起学Android-数据存储","datePublished":"2021-06-29T00:00:00.000Z","dateModified":"2021-06-29T00:00:00.000Z","image":"","url":"https://icantunderstand.github.io/blogNew//blog/crossPlatform/androidStore"}},"children":[["$","p",null,{"children":"应用程序在运行时需要占用系统的存储空间来实现加载代码运行、存储运行时数据等功能。理解内存空间的管理策略能让我们更好的理解代码在系统中运行的机制。本文从代码运行时存储开始逐步介绍V8的垃圾回收机制。"}],["$","h2",null,{"className":"content-header","id":"运行时存储","children":[["$","a",null,{"href":"#运行时存储","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"运行时存储"]}],["$","h3",null,{"className":"content-header","id":"堆存储","children":[["$","a",null,{"href":"#堆存储","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"堆存储"]}],["$","ul",null,{"children":[["$","li",null,{"children":"主要存储全局变量,引用类型"}],["$","li",null,{"children":"动态分配,可分配动态空间,有垃圾回收机制参与空间管理"}],["$","li",null,{"children":"总存储空间大(通常分配给应用的空间有限制),查找效率低"}],["$","li",null,{"children":"堆空间被应用的线程间共享"}]]}],["$","p",null,{"children":"字符串在JavaScript中是不可变的(immutable)对象，每次对字符串进行修改操作时，都会创建一个新的字符串对象"}],["$","h3",null,{"className":"content-header","id":"栈存储","children":[["$","a",null,{"href":"#栈存储","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"栈存储"]}],["$","ul",null,{"children":[["$","li",null,{"children":"主要存储局部变量(基础数据类型)、指针、函数执行片段(function frames)"}],["$","li",null,{"children":"由系统分配,通常存储限定大小的数据,栈片段弹出后空间释放"}],["$","li",null,{"children":"栈结构后进先出(LIFO),访问效率高"}],["$","li",null,{"children":"多线程应用每个线程都有一个栈存储空间"}]]}],["$","h2",null,{"className":"content-header","id":"内存管理","children":[["$","a",null,{"href":"#内存管理","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"内存管理"]}],["$","div",null,{"children":["通常说的内存管理都是指对堆内存空间的管理,以下介绍V8中的内存管理方式。",["$","br",null,{}],"在V8中运行的程序会被分配如下的内存空间(Resident Set) ",["$","$Lf",null,{"src":"/blogNew/static/images/nodeStatic/nodeMemory/V8.png","alt":"V8内存结构","width":"960","height":"540"}]]}],["$","h3",null,{"className":"content-header","id":"v8堆内存结构","children":[["$","a",null,{"href":"#v8堆内存结构","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"V8堆内存结构"]}],["$","ul",null,{"children":[["$","li",null,{"children":"(New Space)新生区 新分配对象或者存活期较短的对象都会存储到新生区"}],["$","li",null,{"children":["(Old Space)老生区 新生区经过垃圾回收会晋升到老生区",["$","ul",null,{"children":[["$","li",null,{"children":"Old pointer space 保存有指向其他对象的对象"}],["$","li",null,{"children":"Old data space 存放只包含原始数据对象(无指向其他对象指针)、字符串、封箱的数字以及未封箱的双精度数字数组"}]]}]]}],["$","li",null,{"children":"(Large object space)大对象区 存储超过超过1MB大小的对象,垃圾回收不会处理大对象区。"}],["$","li",null,{"children":"(Code-space)代码区 存储代码,唯一有运行权限的存储空间"}],["$","li",null,{"children":"Cell space, property cell space, and map space 这些空间保存大小一致的对象"}]]}],["$","h3",null,{"className":"content-header","id":"v8垃圾回收","children":[["$","a",null,{"href":"#v8垃圾回收","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"V8垃圾回收"]}],["$","p",null,{"children":"V8的垃圾回收机制只作用于内存空间的新生区和老生区,由于在新生区和老生区存储数据的类型(大小,存活时间)等不同,垃圾回收在新生区和老生区使用不同的策略实现。"}],["$","h3",null,{"className":"content-header","id":"新生区垃圾回收","children":[["$","a",null,{"href":"#新生区垃圾回收","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"新生区垃圾回收"]}],["$","p",null,{"children":"新生使用Scavenger算法"}],["$","ul",null,{"children":[["$","li",null,{"children":"新生区内存一分为二,每部分空间称为semispace. 在运行时只有一个semispace处于使用中,使用状态的semispace称为From空间,空闲状态的semispace称为To空间"}],["$","li",null,{"children":"在分配对象的时候会先从From空间分配对象,当From空间无法存储没有足够的空间存储新对象的时候触发垃圾回收"}],["$","li",null,{"children":"在进行垃圾回收的时候会检查From空间的存活对象将存活对象复制到To空间,完成复制后From空间和To空间会进行角色互换"}]]}],["$","h4",null,{"className":"content-header","id":"新生区晋升到老生区","children":[["$","a",null,{"href":"#新生区晋升到老生区","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"新生区晋升到老生区"]}],["$","p",null,{"children":"在新生区的垃圾回收中满足以下两个条件,可以移动到老生区存储。"}],["$","ul",null,{"children":[["$","li",null,{"children":"当对象从From空间复制到To空间的时候,如果它经历过一次Scavenge回收会把该对象从From空间复制到老生区"}],["$","li",null,{"children":"当对象从From空间复制到To空间的时候如果To空间使用超过25%则这个对象直接复制到老生区"}]]}],["$","h3",null,{"className":"content-header","id":"老生区垃圾回收","children":[["$","a",null,{"href":"#老生区垃圾回收","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"老生区垃圾回收"]}],["$","p",null,{"children":"老生区由于存活占比较大,使用Scavenge算法并不科学。在老生区使用Mark-Sweep-Compact来实现垃圾回收。"}],["$","ul",null,{"children":[["$","li",null,{"children":["Mark 只标记存活的对象,如果循环引用但是无法被标也会被清除(解决循环引用问题)",["$","ul",null,{"children":[["$","li",null,{"children":"垃圾回收器会在内部创建一个根列表(全局对象,本地函数的局部变量和参数,当前嵌套调用链上的其他函数的变量和参数),用于从根节点出发去寻找可以被访问的变量"}],["$","li",null,{"children":"垃圾回收器从所有根节点出发遍历其可以访问到的子节点标记为活动节点,不能到达的节点为非活动节点"}]]}]]}],["$","li",null,{"children":"Sweep 释放非活动节点空间"}],["$","li",null,{"children":"Compact 整理内存空间,将存活对象占用的空间移动到一起,减少内存间隙"}]]}],["$","p",null,{"children":"由于垃圾回收会暂停应用的执行,V8的垃圾回收机制又通过增量回收(incremental GC)、并行标记(Concurrent marking)、并行清除整理(Concurrent sweeping/compacting)、(懒整理)Lazy sweeping等手段结合优化回收效率。"}],["$","h2",null,{"className":"content-header","id":"参考","children":[["$","a",null,{"href":"#参考","aria-hidden":"true","tabIndex":"-1","children":["$","span",null,{"className":"content-header-link","children":["$","svg",null,{"className":"h-5 linkicon w-5","fill":"currentColor","viewBox":"0 0 20 20","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z"}],["$","path",null,{"d":"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z"}]]}]}]}],"参考"]}],["$","p",null,{"children":[["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://deepu.tech/memory-management-in-programming/","children":"Demystifying memory management in modern programming languages"}],["$","br",null,{}],["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://deepu.tech/memory-management-in-v8/","children":"Visualizing memory management in V8 Engine (JavaScript, NodeJS, Deno, WebAssembly)"}],["$","br",null,{}],["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://juejin.cn/post/6844904016325902344","children":"一文搞懂V8引擎的垃圾回收"}]]}]]}]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"聊聊Node的内存管理 | noodles的笔记本"}],["$","meta","3",{"name":"robots","content":"index, follow"}],["$","meta","4",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","5",{"rel":"canonical","href":"https://icantunderstand.github.io/blogNew/blog/node/nodeMemory"}],["$","link","6",{"rel":"alternate","type":"application/rss+xml","href":"https://icantunderstand.github.io/blogNew//feed.xml"}],["$","meta","7",{"property":"og:title","content":"聊聊Node的内存管理"}],["$","meta","8",{"property":"og:url","content":"https://icantunderstand.github.io/blogNew/blog/node/nodeMemory"}],["$","meta","9",{"property":"og:site_name","content":"noodles的笔记本"}],["$","meta","10",{"property":"og:locale","content":"en_US"}],["$","meta","11",{"property":"og:image","content":"https://icantunderstand.github.io/blogNew/"}],["$","meta","12",{"property":"og:type","content":"article"}],["$","meta","13",{"property":"article:published_time","content":"2021-07-01T00:00:00.000Z"}],["$","meta","14",{"property":"article:modified_time","content":"2021-07-01T00:00:00.000Z"}],["$","meta","15",{"property":"article:author","content":"noodles"}],["$","meta","16",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","17",{"name":"twitter:title","content":"聊聊Node的内存管理"}],["$","meta","18",{"name":"next-size-adjust"}]]
1:null
